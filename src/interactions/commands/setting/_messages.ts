import { ActionRowBuilder, ButtonBuilder, ButtonStyle, channelMention, ChannelType, Colors, EmbedBuilder, formatEmoji, StringSelectMenuBuilder } from 'discord.js';
import { GrayEmojies, WhiteEmojies } from '../../../module/emojies';
import { ControlPanelComponentPagination } from './_pagination';
import { booleanStatus, buttonLabelStatus, buttonStyleStatus, channelStatus, roleStatus } from '../../../module/settingStatus';

export const ControlPanelMessages = new Map<FeatureType, ControlPanelComponentPagination>();

export enum FeatureType {
  JoinAndLeaveMessage = 'joinAndLeaveMessage',
  ReportToAdmin = 'reportToAdmin',
  MessageExpansion = 'messageExpansion',
  EventLog = 'eventLog',
  ChangeVerificationLevel = 'changeVerificationLevel',
}

const ChannelTypeMap = new Map([
  [ ChannelType.GuildAnnouncement, 'Announcement' ],
  [ ChannelType.PublicThread, 'Thread(ÂÖ¨Èñã)' ],
  [ ChannelType.PrivateThread, 'Thread(„Éó„É©„Ç§„Éô„Éº„Éà)' ],
  [ ChannelType.GuildVoice, 'Voice' ],
  [ ChannelType.GuildStageVoice, 'Stage' ],
]);

const verificationLevel = [
  '`‚ùå` „Åì„Çå„ÅåË¶ã„Åà„Çã„ÅÆ„ÅØ„Åä„Åã„Åó„ÅÑ„Çà',
  '`üü¢` **‰Ωé:** „É°„Éº„É´Ë™çË®º„Åå„Åï„Çå„Å¶„ÅÑ„Çã„Ç¢„Ç´„Ç¶„É≥„Éà„ÅÆ„Åø',
  '`üü°` **‰∏≠:** Discord„Å´ÁôªÈå≤„Åó„Å¶„Åã„Çâ5ÂàÜ‰ª•‰∏äÁµåÈÅé„Åó„Åü„Ç¢„Ç´„Ç¶„É≥„Éà„ÅÆ„Åø',
  '`üü†` **È´ò:** „Åì„ÅÆ„Çµ„Éº„Éê„Éº„ÅÆ„É°„É≥„Éê„Éº„Å®„Å™„Å£„Å¶„Åã„Çâ10ÂàÜ‰ª•‰∏äÁµåÈÅé„Åó„Åü„É°„É≥„Éê„Éº„ÅÆ„Åø',
  '`üî¥` **ÊúÄÈ´ò:** ÈõªË©±Ë™çË®º„Åå„Åï„Çå„Å¶„ÅÑ„Çã„Ç¢„Ç´„Ç¶„É≥„Éà„ÅÆ„Åø',
];

// ÂÖ•ÈÄÄÂÆ§„É°„ÉÉ„Çª„Éº„Ç∏
ControlPanelMessages.set(FeatureType.JoinAndLeaveMessage, new ControlPanelComponentPagination()
  .setMessageOptions((setting) => ({ embeds: [
    new EmbedBuilder()
    .setTitle('`üîß` Ë®≠ÂÆö-ÂÖ•ÈÄÄÂÆ§„É°„ÉÉ„Çª„Éº„Ç∏')
    .setDescription('```„É°„É≥„Éê„Éº„Åå„Çµ„Éº„Éê„Éº„Å´ÂèÇÂä†„Åó„Åü„ÇäËÑ±ÈÄÄ„Åó„Åü„Çä„Åó„ÅüÈöõ„Å´„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈÄÅ‰ø°„Åó„Åæ„Åô„ÄÇ(„É°„ÉÉ„Çª„Éº„Ç∏„ÅØÂêÑË®≠ÂÆö„ÅÆ„Äå„Éó„É¨„Éì„É•„Éº„Äç„Éú„Çø„É≥„ÅßÁ¢∫Ë™ç„Åß„Åç„Åæ„Åô„ÄÇ)```')
    .setColor(Colors.Blurple)
    .setFields(
      {
        name: 'ÂÖ•ÂÆ§ÊôÇ',
        value: `${booleanStatus(setting?.message.join.enable)}\n${channelStatus(setting?.message.join.channel)}`,
        inline: true,
      },
      {
        name: 'ÈÄÄÂÆ§ÊôÇ',
        value: `${booleanStatus(setting?.message.leave.enable)}\n${channelStatus(setting?.message.leave.channel)}`,
        inline: true,
      },
    ),
  ] }))
  .addActionRows((setting) => [
    new ActionRowBuilder<ButtonBuilder>().setComponents(
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-message-join-enable')
        .setLabel(buttonLabelStatus(setting?.message.join.enable))
        .setStyle(buttonStyleStatus(setting?.message.join.enable))
        .setDisabled(!setting?.message.join.channel),
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-message-join-channel')
        .setLabel('ÈÄÅ‰ø°ÂÖà')
        .setEmoji(WhiteEmojies.channel)
        .setStyle(ButtonStyle.Secondary),
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-message-join-message')
        .setLabel('„É°„ÉÉ„Çª„Éº„Ç∏')
        .setEmoji(WhiteEmojies.message)
        .setStyle(ButtonStyle.Secondary),
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-message-join-preview')
        .setLabel('„Éó„É¨„Éì„É•„Éº')
        .setStyle(ButtonStyle.Primary),
    ),
  ], { name: 'ÂÖ•ÂÆ§„É°„ÉÉ„Çª„Éº„Ç∏', description: '„É°„É≥„Éê„ÉºÂèÇÂä†ÊôÇ„Å´„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈÄÅ‰ø°', emoji: WhiteEmojies.setting })
  .addActionRows((setting) => [
    new ActionRowBuilder<ButtonBuilder>().setComponents(
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-message-leave-enable')
        .setLabel(buttonLabelStatus(setting?.message.leave.enable))
        .setStyle(buttonStyleStatus(setting?.message.leave.enable))
        .setDisabled(!setting?.message.leave.channel),
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-message-leave-channel')
        .setLabel('ÈÄÅ‰ø°ÂÖà')
        .setEmoji(WhiteEmojies.channel)
        .setStyle(ButtonStyle.Secondary),
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-message-leave-message')
        .setLabel('„É°„ÉÉ„Çª„Éº„Ç∏')
        .setEmoji(WhiteEmojies.message)
        .setStyle(ButtonStyle.Secondary),
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-message-leave-preview')
        .setLabel('„Éó„É¨„Éì„É•„Éº')
        .setStyle(ButtonStyle.Primary),
    ),
  ], { name: 'ÈÄÄÂÆ§„É°„ÉÉ„Çª„Éº„Ç∏', description: '„É°„É≥„Éê„ÉºÈÄÄÂÆ§ÊôÇ„Å´„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈÄÅ‰ø°', emoji: WhiteEmojies.setting }),
);

// „Çµ„Éº„Éê„ÉºÂÜÖÈÄöÂ†±
ControlPanelMessages.set(FeatureType.ReportToAdmin, new ControlPanelComponentPagination()
  .setMessageOptions((setting) => ({ embeds: [
    new EmbedBuilder()
      .setTitle('`üîß` Ë®≠ÂÆö-„Çµ„Éº„Éê„ÉºÂÜÖÈÄöÂ†±')
      .setDescription('```„É°„É≥„Éê„Éº„Åå„É´„Éº„É´„Å´ÈÅïÂèç„Åó„Åü„É°„ÉÉ„Çª„Éº„Ç∏„ÇÑ„É¶„Éº„Ç∂„Éº„Çí„É¢„Éá„É¨„Éº„Çø„Éº„Å´ÈÄöÂ†±„Åß„Åç„Çã„Çà„ÅÜ„Å´„Å™„Çä„Åæ„Åô„ÄÇ```')
      .setColor(Colors.Blurple)
      .setFields(
        {
          name: '‰∏ÄËà¨Ë®≠ÂÆö',
          value: channelStatus(setting?.report.channel),
          inline: true,
        },
        {
          name: 'ÈÄöÁü•Ë®≠ÂÆö',
          value: `${booleanStatus(setting?.report.mention.enable)}\n${roleStatus(setting?.report.mention.role)}`,
          inline: true,
        },
      ),
  ] }))
  .addActionRows(() => [
    new ActionRowBuilder<ButtonBuilder>().setComponents(
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-report-channel')
        .setLabel('ÈÄÅ‰ø°ÂÖà')
        .setEmoji(WhiteEmojies.channel)
        .setStyle(ButtonStyle.Secondary),
    ),
  ], { name: 'Âü∫Êú¨Ë®≠ÂÆö', emoji: WhiteEmojies.setting })
  .addActionRows((setting) => [
    new ActionRowBuilder<ButtonBuilder>().setComponents(
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-report-mention-enable')
        .setLabel(buttonLabelStatus(setting?.report.mention.enable))
        .setStyle(buttonStyleStatus(setting?.report.mention.enable))
        .setDisabled(!setting?.report.mention.role),
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-report-mention-role')
        .setLabel('„É≠„Éº„É´')
        .setEmoji(WhiteEmojies.role)
        .setStyle(ButtonStyle.Secondary),
    ),
  ], { name: 'ÈÄöÁü•Ë®≠ÂÆö', description: 'ÈÄöÂ†±Âèó‰ø°ÊôÇ„Å´„É≠„Éº„É´„Çí„É°„É≥„Ç∑„Éß„É≥', emoji: WhiteEmojies.role }),
);

// „É°„ÉÉ„Çª„Éº„Ç∏URLÂ±ïÈñã
ControlPanelMessages.set(FeatureType.MessageExpansion, new ControlPanelComponentPagination()
  .setMessageOptions((setting) => ({ embeds: [
    new EmbedBuilder()
      .setTitle('`üîß` Ë®≠ÂÆö-„É°„ÉÉ„Çª„Éº„Ç∏URLÂ±ïÈñã')
      .setDescription('```Discord„ÅÆ„É°„ÉÉ„Çª„Éº„Ç∏URL„ÅåÈÄÅ‰ø°„Åï„Çå„ÅüÈöõ„Å´„ÄÅ„Åù„ÅÆ„É°„ÉÉ„Çª„Éº„Ç∏„ÅÆÂÜÖÂÆπ„ÇÑÈÄÅ‰ø°ËÄÖ„ÅÆÊÉÖÂ†±„ÇíÈÄÅ‰ø°„Åó„Åæ„Åô„ÄÇ```')
      .setColor(Colors.Blurple)
      .setFields(
        {
          name: 'Âü∫Êú¨Ë®≠ÂÆö',
          value: booleanStatus(setting?.message.expansion.enable),
        },
        {
          name: '‰æãÂ§ñ („Çø„Ç§„Éó)',
          value: setting?.message.expansion.ignore.types?.map(v => ChannelTypeMap.get(v)).filter(Boolean).map(v => `\`${v}\``).join(' ') || '„Å™„Åó',
          inline: true,
        },
        {
          name: '‰æãÂ§ñ („ÉÅ„É£„É≥„Éç„É´)',
          value: setting?.message.expansion.ignore.ids?.map(v => channelMention(v)).join(' ') || '„Å™„Åó',
          inline: true,
        },
      ),
  ] }))
  .addActionRows((setting) => [
    new ActionRowBuilder<ButtonBuilder>().setComponents(
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-message-expansion-enable')
        .setLabel(buttonLabelStatus(setting?.message.expansion.enable))
        .setStyle(buttonStyleStatus(setting?.message.expansion.enable)),
    ),
  ], { name: 'Âü∫Êú¨Ë®≠ÂÆö', emoji: WhiteEmojies.setting })
  .addActionRows((setting) => [
    new ActionRowBuilder<StringSelectMenuBuilder>().setComponents(
      new StringSelectMenuBuilder()
        .setCustomId('nonick-js:setting-message-expansion-ignore-types')
        .setMinValues(0)
        .setMaxValues(5)
        .setPlaceholder('‰æãÂ§ñË®≠ÂÆö („Çø„Ç§„Éó)')
        .setOptions(
          {
            label: '„Ç¢„Éä„Ç¶„É≥„Çπ',
            value: String(ChannelType.GuildAnnouncement),
            emoji: '966773928787836958',
            default: setting?.message.expansion.ignore.types?.includes(ChannelType.GuildAnnouncement),
          },
          {
            label: '„Éú„Ç§„Çπ',
            value: String(ChannelType.GuildVoice),
            emoji: '966773928733315142',
            default: setting?.message.expansion.ignore.types?.includes(ChannelType.GuildVoice),
          },
          // {
          //   label: '„Çπ„ÉÜ„Éº„Ç∏',
          //   value: String(ChannelType.GuildStageVoice),
          //   emoji: '966773928645255178',
          //   default: setting?.message.expansion.ignore.types?.includes(ChannelType.GuildStageVoice),
          // },
          {
            label: '„Çπ„É¨„ÉÉ„Éâ(ÂÖ¨Èñã)',
            value: String(ChannelType.PublicThread),
            emoji: '966773928712359946',
            default: setting?.message.expansion.ignore.types?.includes(ChannelType.PublicThread),
          },
          {
            label: '„Çπ„É¨„ÉÉ„Éâ(„Éó„É©„Ç§„Éô„Éº„Éà)',
            value: String(ChannelType.PrivateThread),
            emoji: '966773928712359946',
            default: setting?.message.expansion.ignore.types?.includes(ChannelType.PrivateThread),
          },
        ),
    ),
    new ActionRowBuilder<ButtonBuilder>().setComponents(
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-message-expansion-ignore-addChannel')
        .setEmoji(WhiteEmojies.addMark)
        .setStyle(ButtonStyle.Secondary),
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-message-expansion-ignore-deleteAll')
        .setLabel('‰æãÂ§ñ„ÉÅ„É£„É≥„Éç„É´„ÇíÂÖ®ÂâäÈô§')
        .setStyle(ButtonStyle.Danger)
        .setDisabled(!setting?.message.expansion.ignore.ids.length),
    ),
  ], { name: '‰æãÂ§ñË®≠ÂÆö', description: 'URLÂ±ïÈñã„ÇíË°å„Çè„Å™„ÅÑ„ÉÅ„É£„É≥„Éç„É´„ÇíË®≠ÂÆö', emoji: WhiteEmojies.setting }),
);

// „Ç§„Éô„É≥„Éà„É≠„Ç∞
ControlPanelMessages.set(FeatureType.EventLog, new ControlPanelComponentPagination()
  .setMessageOptions((setting) => ({ embeds: [
    new EmbedBuilder()
      .setTitle('`üîß`Ë®≠ÂÆö-„Ç§„Éô„É≥„Éà„É≠„Ç∞')
      .setDescription('```„Çµ„Éº„Éê„ÉºÂÜÖ„ÅßËµ∑„Åì„Å£„Åü„Ç§„Éô„É≥„Éà„ÅÆ„É≠„Ç∞„ÇíÈÄÅ‰ø°„Åó„Åæ„Åô„ÄÇ```')
      .setColor(Colors.Blurple)
      .setFields(
        {
          name: 'Timeout',
          value: `${booleanStatus(setting?.log.timeout.enable)}\n${channelStatus(setting?.log.timeout.channel)}`,
          inline: true,
        },
        {
          name: 'Kick',
          value: `${booleanStatus(setting?.log.kick.enable)}\n${channelStatus(setting?.log.kick.channel)}`,
          inline: true,
        },
        {
          name: 'BAN',
          value: `${booleanStatus(setting?.log.ban.enable)}\n${channelStatus(setting?.log.ban.channel)}`,
          inline: true,
        },
      ),
  ] }))
  .addActionRows((setting) => [
    new ActionRowBuilder<ButtonBuilder>().setComponents(
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-log-timeout-enable')
        .setLabel(buttonLabelStatus(setting?.log.timeout.enable))
        .setStyle(buttonStyleStatus(setting?.log.timeout.enable))
        .setDisabled(!setting?.log?.timeout?.channel),
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-log-timeout-channel')
        .setLabel('ÈÄÅ‰ø°ÂÖà')
        .setEmoji(WhiteEmojies.channel)
        .setStyle(ButtonStyle.Secondary),
    ),
  ], { name: 'Timeout„É≠„Ç∞', emoji: WhiteEmojies.setting })
  .addActionRows((setting) => [
    new ActionRowBuilder<ButtonBuilder>().setComponents(
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-log-kick-enable')
        .setLabel(buttonLabelStatus(setting?.log.kick.enable))
        .setStyle(buttonStyleStatus(setting?.log.kick.enable))
        .setDisabled(!setting?.log.kick.channel),
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-log-kick-channel')
        .setLabel('ÈÄÅ‰ø°ÂÖà')
        .setEmoji(WhiteEmojies.channel)
        .setStyle(ButtonStyle.Secondary),
    ),
  ], { name: 'Kick„É≠„Ç∞', emoji: WhiteEmojies.setting })
  .addActionRows((setting) => [
    new ActionRowBuilder<ButtonBuilder>().setComponents(
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-log-ban-enable')
        .setLabel(buttonLabelStatus(setting?.log.ban.enable))
        .setStyle(buttonStyleStatus(setting?.log.ban.enable))
        .setDisabled(!setting?.log.ban.channel),
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-log-ban-channel')
        .setLabel('ÈÄÅ‰ø°ÂÖà')
        .setEmoji(WhiteEmojies.channel)
        .setStyle(ButtonStyle.Secondary),
    ),
  ], { name: 'BAN„É≠„Ç∞', emoji: WhiteEmojies.setting }),
);

// Ëá™ÂãïË™çË®º„É¨„Éô„É´Â§âÊõ¥
ControlPanelMessages.set(FeatureType.ChangeVerificationLevel, new ControlPanelComponentPagination()
  .setMessageOptions((setting) => ({ embeds: [
    new EmbedBuilder()
      .setTitle('`üîß` Ë®≠ÂÆö-Ëá™ÂãïË™çË®º„É¨„Éô„É´Â§âÊõ¥')
      .setDescription('```Ê±∫„Åæ„Å£„ÅüÊôÇÈñì„ÅÆÈñì„ÄÅ„Çµ„Éº„Éê„Éº„ÅÆË™çË®º„É¨„Éô„É´„ÇíËá™Âãï„ÅßÂ§âÊõ¥„Åó„Åæ„Åô„ÄÇ```')
      .setColor(Colors.Blurple)
      .setFields(
        {
          name: '‰∏ÄËà¨Ë®≠ÂÆö',
          value: [
            booleanStatus(setting?.changeVerificationLevel.enable),
            `${formatEmoji(GrayEmojies.schedule)} **ÈñãÂßãÊôÇÂàª: **${setting?.changeVerificationLevel.time.start == null ? 'Êú™Ë®≠ÂÆö' : `${setting?.changeVerificationLevel.time.start}:00`}`,
            `${formatEmoji(GrayEmojies.schedule)} **ÁµÇ‰∫ÜÊôÇÂàª: **${setting?.changeVerificationLevel.time.end == null ? 'Êú™Ë®≠ÂÆö' : `${setting?.changeVerificationLevel.time.end}:00`}`,
          ].join('\n'),
          inline: true,
        },
        {
          name: '„É≠„Ç∞',
          value: `${booleanStatus(setting?.changeVerificationLevel.log.enable)}\n${channelStatus(setting?.changeVerificationLevel.log.channel)}`,
          inline: true,
        },
        {
          name: 'ÊúüÈñì‰∏≠„Å´Â§âÊõ¥„Åô„Çã„É¨„Éô„É´',
          value: `${setting?.changeVerificationLevel.level.new == null ? 'Êú™Ë®≠ÂÆö' : verificationLevel[setting?.changeVerificationLevel.level.new]}`,
        },
      ),
  ] }))
  .addActionRows((setting) => [
    new ActionRowBuilder<StringSelectMenuBuilder>().setComponents(
      new StringSelectMenuBuilder()
        .setCustomId('nonick-js:setting-changeVerificationLevel-level')
        .setPlaceholder('ÊúüÈñì‰∏≠„Å´Â§âÊõ¥„Åô„ÇãË™çË®º„É¨„Éô„É´„ÇíË®≠ÂÆö')
        .setOptions([
          { label: '‰Ωé', value: '1', description: '„É°„Éº„É´Ë™çË®º„Åå„Åï„Çå„Å¶„ÅÑ„Çã„Ç¢„Ç´„Ç¶„É≥„Éà„ÅÆ„Åø', emoji: 'üü¢' },
          { label: '‰∏≠', value: '2', description: 'Discord„Å´ÁôªÈå≤„Åó„Å¶„Åã„Çâ5ÂàÜ‰ª•‰∏äÁµåÈÅé„Åó„Åü„Ç¢„Ç´„Ç¶„É≥„Éà„ÅÆ„Åø', emoji: 'üü°' },
          { label: 'È´ò', value: '3', description: '„Åì„ÅÆ„Çµ„Éº„Éê„Éº„ÅÆ„É°„É≥„Éê„Éº„Å®„Å™„Å£„Å¶„Åã„Çâ10ÂàÜ‰ª•‰∏äÁµåÈÅé„Åó„Åü„É°„É≥„Éê„Éº„ÅÆ„Åø', emoji: 'üü†' },
          { label: 'ÊúÄÈ´ò', value: '4', description: 'ÈõªË©±Ë™çË®º„Åå„Åï„Çå„Å¶„ÅÑ„Çã„Ç¢„Ç´„Ç¶„É≥„Éà„ÅÆ„Åø', emoji: 'üî¥' },
        ].map(option => ({ ...option, default: setting?.changeVerificationLevel.level.new == Number(option.value) }))),
    ),
    new ActionRowBuilder<ButtonBuilder>().setComponents(
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-changeVerificationLevel-enable')
        .setLabel(buttonLabelStatus(setting?.changeVerificationLevel.enable))
        .setStyle(buttonStyleStatus(setting?.changeVerificationLevel.enable))
        .setDisabled(!(setting?.changeVerificationLevel.level.new && setting?.changeVerificationLevel.time.start !== null && setting?.changeVerificationLevel.time.end !== null)),
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-changeVerificationLevel-time')
        .setLabel('ÈñãÂßã„ÉªÁµÇ‰∫ÜÊôÇÈñì')
        .setEmoji(WhiteEmojies.schedule)
        .setStyle(ButtonStyle.Secondary),
    ),
  ], { name: '‰∏ÄËà¨Ë®≠ÂÆö', emoji: WhiteEmojies.setting })
  .addActionRows((setting) => [
    new ActionRowBuilder<ButtonBuilder>().setComponents(
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-changeVerificationLevel-log-enable')
        .setLabel(buttonLabelStatus(setting?.changeVerificationLevel.log.enable))
        .setStyle(buttonStyleStatus(setting?.changeVerificationLevel.log.enable))
        .setDisabled(!setting?.changeVerificationLevel.log.channel),
      new ButtonBuilder()
        .setCustomId('nonick-js:setting-changeVerificationLevel-log-channel')
        .setLabel('ÈÄÅ‰ø°ÂÖà')
        .setStyle(ButtonStyle.Secondary),
    ),
  ], { name: '„É≠„Ç∞Ë®≠ÂÆö', description: 'Ë™çË®º„É¨„Éô„É´„ÇíÂ§âÊõ¥„Åó„ÅüÈöõ„Å´„É≠„Ç∞„ÇíÈÄÅ‰ø°„Åô„Çã', emoji: WhiteEmojies.setting }),
);